/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * Last Modified 04/27/2017   mjp
 */
// device tree REVG
/ {
    cpus {
        cpu@0 {
            cpu0-supply = <&vdd1_reg>;
        };
    };

    memory {
        device_type = "memory";
        reg = <0x80000000 0x10000000>; /* 256 MB */
    };
/*
    leds {
        pinctrl-names = "default";
        pinctrl-0 = <&user_leds_s0>;

        compatible = "gpio-leds";

        led0 {
            label = "satfi2:led1:red";
            gpios = <&gpio1 21 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "LED1-RED";
            default-state = "on";
        };

        led1 {
            label = "satfi2:led1:green";
            gpios = <&gpio1 22 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "LED1-GREEN";
            default-state = "on";
        };

        led2 {
            label = "satfi2:led2:red";
            gpios = <&gpio1 23 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "LED2-RED";
            default-state = "on";
        };

        led3 {
            label = "satfi2:led2:green";
            gpios = <&gpio1 24 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "LED2-GREEN";
            default-state = "on";
        };

        led4 {
            label = "satfi2:led3:red";
            gpios = <&gpio1 25 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "LED3-RED";
            default-state = "on";
        };

        led5 {
            label = "satfi2:led3:green";
            gpios = <&gpio1 26 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "LED3-GREEN";
            default-state = "on";
        };
    };
*/

    buttons {
        pinctrl-names = "default";
        pinctrl-0 = <&button_pins>;
	
        compatible = "gpio-keys";
	autorepeat;
        #address-cells = <1>;
        #size-cells = <0>;
    
 SOS_button {
            label = "satfi2:button:SOS";
	    linux,code = <157>;
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;
	    gpio-key,wakeup;
        };

/*
        PWR_button {
          label = "satfi2:button:PWR";
            gpios = <&gpio0 13 GPIO_ACTIVE_HIGH>; // changed to gpio bank 0 number 13
        };
*/
    };

 gpio_pins: gpio_pins@0 {
    compatible = "gpio-keys";
    #address-cells = <1>;
    #size-cells = <0>;
    autorepeat;

    pins@0 {
      label = "WIFI_WAKEUP_1";
      linux,code = <155>;
      gpios = <&gpio0 20 GPIO_ACTIVE_LOW>;
      gpio-key,wakeup;
    };

  as_wakeup {
      label = "AS_WAKEUP_1";
      linux,code = <156>;
      gpios = <&gpio0 1 GPIO_ACTIVE_HIGH>;
      gpio-key,wakeup;
    };
/*
     SOS_button {
            label = "satfi2:button:SOS";
	linux,code = <157>;
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;
	    gpio-key,wakeup;
        };
*/
 
  
  };

    onewire_device {
        pinctrl-names = "default";
        pinctrl-0 = <&dallas_w1_pins>;

        compatible = "w1-gpio";
        gpios = <&gpio3 16 GPIO_ACTIVE_HIGH>; // Connects to Antenna EEPROM
    };

    vbat: fixedregulator@0 {
        compatible = "regulator-fixed";
        regulator-name = "vbat";
        regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
        regulator-boot-on;
    };
};

&am33xx_pinmux {
    pinctrl-names = "default";
    pinctrl-0 = <&xdma_pins>;
/*
    user_leds_s0: user_leds_s0 {
        pinctrl-single,pins = <
            AM33XX_IOPAD(0x54, PIN_OUTPUT_PULLDOWN | MUX_MODE7)  // gpmc_a5.gpio1_21 
            AM33XX_IOPAD(0x58, PIN_OUTPUT_PULLUP   | MUX_MODE7)  // gpmc_a6.gpio1_22 
            AM33XX_IOPAD(0x5c, PIN_OUTPUT_PULLDOWN | MUX_MODE7)  // gpmc_a7.gpio1_23 
            AM33XX_IOPAD(0x60, PIN_OUTPUT_PULLUP   | MUX_MODE7)  // gpmc_a8.gpio1_24 
            AM33XX_IOPAD(0x64, PIN_OUTPUT_PULLDOWN | MUX_MODE7)  // gpmc_a8.gpio1_24 
            AM33XX_IOPAD(0x68, PIN_OUTPUT_PULLUP   | MUX_MODE7)  // gpmc_a8.gpio1_24 
        >;
    };
*/
    button_pins: pinmux_button_pins {
        pinctrl-single,pins = <
             0x28 (PIN_INPUT_PULLUP | MUX_MODE7)     /* gpmc_a1.gpio11_27     SOS */ // SOS button changed [T11]
            0x17c (PIN_INPUT        | MUX_MODE7)     /* gpmc_advn_ale.gpio2_2 PWR_BUT */ //power button change [D17]
	    0x90 (PIN_INPUT        | MUX_MODE7) // USB_DC_OK
	    0x78 (PIN_INPUT        | MUX_MODE7) // USB_10V_OK

        >;
    };

    i2c0_pins: pinmux_i2c0_pins {
        pinctrl-single,pins = <
            0x188 (PIN_INPUT_PULLUP | MUX_MODE0)    /* i2c0_sda.i2c0_sda */
            0x18c (PIN_INPUT_PULLUP | MUX_MODE0)    /* i2c0_scl.i2c0_scl */
            0x168 (PIN_INPUT_PULLUP | MUX_MODE7)    /* uart0_ctsn.gpio1[8] PMIC_INT   */
            0x16c (PIN_INPUT_PULLUP | MUX_MODE7)    /* uart0_rtsn.gpio1[9] PMIC SLEEP */
        >;
    };

 wake_up_pins: pinmux_wifi_wakeup_pin {
    pinctrl-single,pins = <
    //0x28 (PIN_INPUT | MUX_MODE7) 
    0x1b4 (PIN_INPUT | MUX_MODE7)  // gpmc_wpn.gpio0_20 
    >;
  };

    /* Serial Debug Port */
    uart0_pins: pinmux_uart0_pins {
        pinctrl-single,pins = <
            0x170 (PIN_INPUT_PULLUP    | MUX_MODE0) /* uart0_rxd.uart0_rxd */
            0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0) /* uart0_txd.uart0_txd */
        >;
    };

    /* AzureWave AW-CU300 WiFi module */
    uart1_pins: pinmux_uart1_pins {
        pinctrl-single,pins = <
            0x180 (PIN_INPUT  | MUX_MODE0) /* uart1_rxd.gpio0_14  WIFI_RX  */
            0x184 (PIN_OUTPUT_PULLDOWN | MUX_MODE0) /* uart1_txd.gpio0_15  WIFI_TX  */
        >;
    };

/* revg uart2 to marvel WIFI module*/
 	uart4_pins: pinmux_uart4_pins {
        pinctrl-single,pins = <
            0x70 (PIN_INPUT  | MUX_MODE6) /* uart4_rxd  WIFI_UART2_RX  */
           0x74 (PIN_OUTPUT_PULLDOWN | MUX_MODE6) /* uart4_txd  WIFI_UART2_TX  */
       >;
   };

    mmc1_pins: pinmux_mmc1_pins {
        pinctrl-single,pins = <
            0x20 (PIN_OUTPUT_PULLUP   | MUX_MODE7) /* gpmc_ad8.gpio0_22     VDD_3V3_WIFI_EN */
            0x88 (PIN_OUTPUT_PULLDOWN   | MUX_MODE7) /* gpmc_csn3.gpio2_0     WIFI_RESET      */

            /* Setup this signals to be tri-stated upon boot so WiFi module boots properly    */
            0x1b4  (PIN_INPUT            | MUX_MODE7) /* 0_20      WIFI_WAKEUP_1   */
            0x94  (PIN_INPUT            | MUX_MODE7) /* gpio2_3  WIFI_WAKEUP_0   */

        >;
    };

    mmc1_pins_sleep: pinmux_mmc1_pins_sleep {
        pinctrl-single,pins = <
            0x20  (PIN_OUTPUT_PULLDOWN  | MUX_MODE7) /* gpmc_ad8.gpio0_22  VDD_3V3_WIFI_EN */
        >;
    };

    dallas_w1_pins: pinmux_dallas_w1_pins {
        pinctrl-single,pins = <
            0x198 (PIN_INPUT_PULLUP | MUX_MODE7)  /* mcasp0_axr0.gpio3_16 Antenna EEPROM */
        >;
    };

    /* Clock Outputs - Make inputs to eliminate RF interference */
    xdma_pins: pinmux_xdma_pins {
        pinctrl-single,pins = <
            0x1b0 (PIN_INPUT | MUX_MODE7) /* xdma_event_intr0.clkout1 */
            0x1b4 (PIN_INPUT | MUX_MODE7) /* xdma_event_intr1.clkout2 */
        >;
    };

    mmc2_pins: pinmux_mmc2_pins {
        pinctrl-single,pins = <
            0x160 (PIN_INPUT | MUX_MODE7) /* spi0_cs1.gpio0_6 MMC0_CD */
        >;
    };

    emmc_pins: pinmux_emmc_pins {
        pinctrl-single,pins = <
            0x80 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
            0x84 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
            0x00 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad0.mmc1_dat0 */
            0x04 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad1.mmc1_dat1 */
            0x08 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad2.mmc1_dat2 */
            0x0c (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad3.mmc1_dat3 */
            0x10 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad4.mmc1_dat4 */
            0x14 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad5.mmc1_dat5 */
            0x18 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad6.mmc1_dat6 */
            0x1c (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad7.mmc1_dat7 */
        >;
    };

};

&uart0 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart0_pins>;

    status = "okay";
};

&uart1 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart1_pins>;
    status = "okay";
};

&uart4 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart4_pins>;

    status = "okay";
};

&usb {
    status = "okay";
};

&usb_ctrl_mod {
    status = "okay";
};

&usb0_phy {
    status = "okay";
};

&usb1_phy {
    status = "okay";
};

&usb0 {
    status = "okay";
    dr_mode = "peripheral";
};

&usb1 {
    status = "okay";
    dr_mode = "host";
};

&cppi41dma  {
    status = "okay";
};

&i2c0 {
    pinctrl-names = "default";
    pinctrl-0 = <&i2c0_pins>;

    status = "okay";
    clock-frequency = <400000>;

    tps: tps@2d {
        reg = <0x2d>;
    };

};
#include "gsx2spi.dtsi"
#include "gps-accel-satfi2.dtsi"
#include "tps65910.dtsi"

&tps {
    reg = <0xd2>;
    interrupt-parent = <&intc>;
    interrupts = < 0 118 0x04 >;

    #gpio-cells = <2>;
    gpio-controller;

    #interrupt-cells = <2>;
    interrupt-controller;

    ti,en-ck32k-xtal;

    vcc1-supply = <&vbat>;
    vcc2-supply = <&vbat>;
    vcc3-supply = <&vbat>;
    vcc4-supply = <&vbat>;
    vcc5-supply = <&vbat>;
    vcc6-supply = <&vbat>;
    vcc7-supply = <&vbat>;
    vccio-supply = <&vbat>;

    regulators {
        vrtc_reg: regulator@0 {
            regulator-always-on;
        };

        vio_reg: regulator@1 {
            regulator-name = "vio,vdds_ddr";
            regulator-always-on;
        };

        vdd1_reg: regulator@2 {
            /* VDD_MPU voltage limits 0.95V - 1.325V with +/-4% tolerance */
            regulator-name = "vdd_mpu,vdd1";
            regulator-min-microvolt = <925000>;
            regulator-max-microvolt = <1378000>;
            regulator-boot-on;
            regulator-always-on;
        };

        vdd2_reg: regulator@3 {
            /* VDD_CORE voltage limits 1.056V - 1.144V with +/-4% tolerance */
            regulator-name = "vdd_core";
            regulator-min-microvolt = <1056000>;
            regulator-max-microvolt = <1144000>;
            regulator-boot-on;
            regulator-always-on;
        };

        vdd3_reg: regulator@4 {
            regulator-always-off;
        };

        vdig1_reg: regulator@5 {
            regulator-always-on;
        };

        vdig2_reg: regulator@6 {
            regulator-always-on;
        };

        vpll_reg: regulator@7 {
            regulator-always-on;
        };

        vdac_reg: regulator@8 {
            regulator-always-on;
        };

        vaux1_reg: regulator@9 {
            regulator-always-on;
        };

        vaux2_reg: regulator@10 {
            regulator-always-on;
        };

        vaux33_reg: regulator@11 {
            regulator-always-on;
        };

        vmmc_reg: regulator@12 {
            regulator-min-microvolt = <1800000>;
            regulator-max-microvolt = <3300000>;
            regulator-always-on;
        };
    };
};

&mmc1 {
    status = "okay";
    bus-width = <0x4>;
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&mmc1_pins>;
    pinctrl-1 = <&mmc1_pins_sleep>;
};

&mmc2 {
    status = "okay";
    bus-width = <0x4>;
    pinctrl-names = "default";
    pinctrl-0 = <&mmc2_pins>;
    cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
    cd-inverted;
};

&aes {
    status = "okay";
};

&sham {
    status = "okay";
};
